version: "3.7"

services:
  oc-patient:
    image: oc-patient
    build:
      context: ../oc-patient
      dockerfile: ./Dockerfile
    ports:
      - "3001:3001"
    healthcheck:
      test: [ "CMD", "nc", "-z", "-v", "oc-patient", "3001" ]
      interval: 30s
      timeout: 10s
    depends_on:
      mongodb:
        condition: service_started
      rabbitmq:
        condition: service_healthy
    links:
      - mongodb
      - rabbitmq
    environment:
      MONGODB_URI: mongodb:27017
      RABBITMQ_URI: rabbitmq:5672
      NODE_ENV: development
    command: [ "yarn", "start:dev" ]
    volumes:
      - ../oc-patient:/workspaces:cached

  oc-gateway:
    image: oc-gateway
    build:
      context: ../oc-gateway
      dockerfile: ./Dockerfile
    ports:
      - 3000:3000
    healthcheck:
      test: [ "CMD", "nc", "-z", "-v", "oc-gateway", "3000" ]
      interval: 30s
      timeout: 10s
    depends_on:
      oc-patient:
        condition: service_healthy
    links:
      - oc-patient
    environment:
      OC_PATIENT_URI: oc-patient:3001
      NODE_ENV: development
    command:
      - "yarn"
      - "start:dev"
    volumes:
      - ../oc-gateway:/workspaces:cached

  mongodb:
    image: mongo:4.4
    restart: always
    container_name: mongodb
    ports:
      - "27017:27017"

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 10s
    environment:
      RABBITMQ_ERLANG_COOKIE: open-clinic
